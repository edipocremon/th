[["index.html", "TerraHidro User Manual 1 Preface", " TerraHidro User Manual Division of Earth Observation and Geoinformatics - DIOTG 2025-10-01 1 Preface http://www.dpi.inpe.br/terrahidro/ | sergio.rosim@inpe.br TerraHidro Version 5.2.0 Dr. Sergio Rosim © 20XX-2023 Division of Earth Observation and Geoinformatics - DIOTG National Institute for Space Research - INPE São José dos Campos, Brazil September 25, 2025 Sponsored by: "],["introduction.html", "2 Introduction QGIS Plugin Installation and Setup Command-Line Interface", " 2 Introduction TerraHidro is an advanced geospatial analysis platform designed for hydrological and geomorphometric applications. Developed at the National Institute for Space Research (INPE), it provides a comprehensive suite of tools for digital elevation model (DEM) preprocessing, flow-direction modeling, watershed and stream network delineation, sink removal, floodplain mapping, and terrain analysis. Unlike traditional cartographic or visualization software, TerraHidro serves primarily as an analytical backend, seamlessly integrating with Geographic Information Systems (GIS) such as QGIS. The system can be used in two main ways: QGIS Plugin: For users seeking a graphical workflow, TerraHidro integrates into the QGIS Processing Toolbox, providing intuitive interfaces to execute all functionalities directly within the GIS environment; Command-Line Interface (CLI): TerraHidro operates as a stand-alone executable with no installation required. Users can run tools directly from a terminal or incorporate them into automated scripts for large-scale processing. TerraHidro supports raster data in the widely used, e.g. GeoTIFF format, and provides basic vector operations through ESRI Shapefiles. By combining high-performance processing with open-source accessibility, TerraHidro enables researchers, students, and professionals to carry out hydrological modeling, geomorphological analysis, and environmental management with precision and reproducibility. Project Highlights Graph-based flow representation that unifies local flow across digital elevation models; Drainage extraction with pit handling using methods such as Priority First Search (PFS) to remove spurious depressions and connect flow in flat areas; Large-basin workflows, with applications demonstrated for Amazon sub-basins; Flexible integration on TerraLib (C++), with bindings that enable coupling to other hydrological components; Operational efficiency from graph traversal and storage, supporting scalable accumulation and network operations; Open architecture that encourages extension and integration in broader GIS environments. QGIS Plugin Installation and Setup The TerraHidro plugin for the QGIS Processing Toolbox provides users with interfaces that allow all TerraHidro functionalities to be executed directly inside QGIS. However, please note that simply installing the plugin does not guarantee its functionality. It is also necessary to configure an environment variable named TERRAHIDRO that points to the directory where the TerraHidro executable was extracted. Installing the TerraHidro Plugin in QGIS Open QGIS. Go to Plugins &gt; Manage and Install Plugins… In the search box, type “terrahidro”. Select the TerraHidro plugin and click Install Plugin. Make sure to check the option “Show experimental plugins” under Options in the left menu. After installation, the TerraHidro plugin will appear in the Processing Toolbox. Configuring the TERRAHIDRO Environment Variable (Windows) In order for the plugin to work properly, you must configure the environment variable TERRAHIDRO to point to the directory where the TerraHidro executable (th.exe) is located. Follow these steps: Open the Control Panel Press Win + S to open the search bar. Type “Control Panel” and press Enter. Access Advanced System Settings In the Control Panel, click System and Security. Click System. On the left panel, click Advanced system settings. Open Environment Variables In the System Properties window, go to the Advanced tab. Click the Environment Variables… button at the bottom. Create a New User Variable In the User variables section, click New. Configure the Variable In the Variable name field, type: TERRAHIDRO In the Variable value field, type the full path to the directory where the TerraHidro executable is located. Example: C:\\Users\\&lt;username&gt;\\Documents\\PROGRAMS\\TerraHidro-5.2.0 Save and Close Click OK to save the new variable. Click OK again to close the System Properties window. Final Step The TERRAHIDRO environment variable is now configured in your user account, pointing to the directory of the TerraHidro executable. This allows the system to locate and execute TerraHidro from any location in the command prompt or within scripts. Important: Restart any open applications or command prompts so that they recognize the newly created environment variable. Command-Line Interface TerraHidro can be used directly from the command line, making it a flexible and efficient option for processing terrain and hydrological data. The software is distributed as a stand-alone executable, so no installation is required—just extract the files and call the program from your terminal or command prompt. Before running any operation, it is important to specify the directory where the TerraHidro executable is located. For example: We recommend placing both the input and output files in the same directory as the TerraHidro executable. This avoids path errors and ensures that the program can easily locate the required files. The structure of TerraHidro commands is designed to be simple and intuitive. Most tools follow the general pattern: th calls the TerraHidro executable. &lt;operation&gt; specifies the tool to be executed (for example, d8, removepits, pfs, minibasins). input.tif is the input raster file, usually a Digital Elevation Model (DEM). output.tif is the resulting raster file generated by the operation. For example, to remove pits from a DEM, the command would be: This straightforward structure makes TerraHidro easy to use while still offering powerful capabilities. By storing all files in the same directory and executing commands step by step, users can build reproducible workflows for DEM preprocessing, flow-direction modeling, watershed delineation, and hydrological hazard simulations. Example: Removing Pits with the pfs Operation The following example demonstrates how to use TerraHidro from the command line: C:\\data&gt;th pfs inputDEM.tif outputDEM.tif C:\\data&gt; indicates the working directory where both the TerraHidro executable (th.exe) and the raster files are stored. th calls the TerraHidro program. pfs specifies the operation to be executed. The Priority-Flood Search (PFS) algorithm is applied to remove sinks or depressions (pits) from a Digital Elevation Model (DEM), generating a hydrologically consistent surface. inputDEM.tif is the input raster file containing the original DEM. outputDEM.tif is the output raster file that will be created, representing the pitless DEM. This simple command ensures that the DEM is corrected for spurious depressions, which is a fundamental preprocessing step before calculating flow directions, contributing areas, and drainage networks.  Tip – Changing the Working Directory Before running TerraHidro commands, make sure you are in the directory where the executable (th.exe) and your input/output files are located. On Windows, use the cd command: cd C:\\Users\\&lt;username&gt;\\Documents\\PROGRAMS\\TerraHidro-5.2.0 On Linux/MacOS, use: cd /home/&lt;username&gt;/PROGRAMS/TerraHidro-5.2.0 After changing to the correct directory, you can call TerraHidro tools directly, for example: th pfs inputDEM.tif outputDEM.tif "],["hydrological-analysis.html", "3 Hydrological Analysis 3.1 DEM Pre-processing and Correction 3.2 Flow Analysis, Drainage Network Extraction and Characterization 3.3 Basin and Sub-basin Delineation 3.4 Geomorphometric analysis 3.5 Applied Hydrology &amp; Risk Management", " 3 Hydrological Analysis 3.1 DEM Pre-processing and Correction This group of algorithms is designed to transform a raw Digital Elevation Model (DEM) into a hydrologically correct surface where water can flow uninterrupted to the watershed outlet. It addresses common DEM errors like pits (depressions), flat areas, and misalignments with known river networks. The output is a “pitless” and “conditioned” DEM that is essential for accurate flow direction, watershed delineation, and subsequent hydrological analysis. agreedem, carve, carvev, fill, flatareas, pfs, pfsd, removepits, simplepits. agreedem carve carvev fill flatareas pfs pfsd removepits simplepits. 3.1.1 agreedem agreedem modifies a Digital Elevation Model (DEM) to conform to a known drainage network. The tool sharpens the elevation values along the network’s cells, effectively burning the channels into the terrain. Users can optionally define a buffer to smooth the elevation of adjacent cells, enhancing the integration of the network with the surrounding topography. This process ensures the DEM’s flow directions align with the provided drainage paths. Input parameters control the sharpening intensity on the network and the degree of smoothing within the specified buffer zone. The tool supports both fixed and variable buffer sizes, which can be defined by an attribute in the input vector data. This operation produces a hydrologically conditioned DEM suitable for subsequent flow routing analysis. 3.1.2 carve carve processes flat areas in a Digital Elevation Model (DEM) by creating an artificial drainage path. The algorithm modifies cell elevations to introduce a slope, enabling hydrological flow routing. It optionally uses a reference drainage network to guide the carving process, ensuring the resulting channel aligns with known flow paths. The tool requires input parameters to specify whether the drainage network is active (DRNON) and which neighboring cells define a flat area’s border (CROSS, DIAG, or ALL). Unlike carvev, which converges carving toward the center of a flat area, carve uses the drainage network to direct the carving trajectory, producing a more accurate hydrological representation. See also: carvev. Parameters Flag Description -i, --dem Input DEM raster file (e.g., inputDEM.tif). --drainage Input drainage network (vector .shp or raster), e.g., inputDrainage.shp. --flat Input flat-areas raster produced by the flatareas functionality (e.g., inputFlatAreas.tif). --use-drainage Defines if the drainage network must be used: • DRNON – converge ao canal • DRNOFF – não usa a rede, converge ao centro das planícies (similar ao carvev). --border Defines which cells form the border of flat areas: • CROSS – vizinhos horizontais/verticais • DIAG – vizinhos diagonais • ALL – todas as direções (8). -o, --output Output DEM raster file with carved flats (e.g., outputDEM.tif). C++ function th carve inputDEM.tif inputDrainage.shp inputFlatAreas.tif DRNON|DRNOFF CROSS|DIAG|ALL outputDEM.tif 3.1.3 carvev carvev processes flat areas in a Digital Elevation Model (DEM) by systematically decreasing elevation values from the borders toward the center. This algorithm generates an artificial slope across the feature, forming a characteristic stair-step pattern that enables hydrological flow routing. The operation functions without external drainage data, using only the DEM’s own geometry to determine the carving path. This method provides a foundational correction for hydrologic conditioning. The key distinction from carve is that carvev does not utilize a reference drainage network to guide the process, converging instead on the geometric center of the flat area. Flag Descrição -i, --dem Input DEM raster file (e.g.,inputDEM.tif) -o, --output Output DEM raster file with carved flats (e.g., outputDEM.tif) C++ function th carvev inputDEM.tif outputDEM.tif 3.1.4 fill fill corrects voids or areas of missing data in a Digital Elevation Model (DEM). The tool uses a separate, often coarser-resolution, reference DEM to supply elevation values for these regions. It replaces null or erroneous cells in the input DEM with corresponding data from the reference source. This process generates a continuous, hydrologically viable elevation surface. The output DEM supports subsequent terrain analysis by ensuring complete spatial data coverage without interruptions. 3.1.5 flatareas flatareas identifies contiguous regions of uniform elevation within a Digital Elevation Model (DEM). The tool scans the input raster for adjacent cells possessing identical elevation values. It then groups these cells into distinct flat features. The algorithm requires a user-defined minimum area threshold, specified as a number of cells. This parameter excludes smaller, potentially insignificant flat zones from the output. The result is a raster layer where each flat area is classified, providing a basis for subsequent hydrological conditioning procedures. 3.1.6 pfs pfs removes depressions from a Digital Elevation Model (DEM) using a priority-first search algorithm. The tool initiates a grid search from each pit cell to locate the nearest spill point with a lower elevation. It employs a priority queue to evaluate potential paths, constructing a descending elevation trajectory to the outlet. This process modifies cell values along the selected path to create a hydrologically continuous surface. The algorithm ensures all depressions are resolved, producing a pit-free DEM suitable for subsequent flow-direction analysis. 3.1.7 pfsd pfsd removes depressions from a Digital Elevation Model (DEM) using a priority-first search algorithm that incorporates a reference drainage network. The tool prioritizes the processing of pits located on the drainage network before addressing upstream depressions. It constructs hydrologic outlets by carving descending elevation paths to the nearest lower cell. This method ensures the resulting drainage structure aligns with the provided network. The algorithm differs from pfs by utilizing the drainage network to guide the depression-removal sequence, enhancing hydrological consistency with known channel locations. 3.1.8 removepits removepits processes a Digital Elevation Model (DEM) to eliminate hydrological depressions and flat areas. This tool executes a sequence of operations, specifically the carvev, simplepits, and pfs algorithms, to ensure comprehensive hydrological correction. It produces a fully connected drainage surface where water can flow uninterrupted to the watershed outlet. The procedure first addresses flat regions by carving drainage paths, then removes simple pits through elevation filling, and finally resolves complex depressions via priority-first search. The output is a pit-free DEM suitable for deriving accurate flow direction and accumulation networks. 3.1.9 simplepits simplepits processes a Digital Elevation Model (DEM) to remove simple hydrological depressions. The algorithm identifies pit cells with no downstream outlet and elevates them to the lowest value of a neighboring cell plus a minor increment. This adjustment creates a functional drainage path while minimizing alteration to the original topography. The tool addresses only depressions where this modification does not generate new downstream pits. It serves as an initial processing step for depression removal and is typically followed by more comprehensive algorithms to resolve complex hydrologic discontinuities. See also: removepits. preprocessado (ex.: BreachDepressions) para remover depressões e áreas planas. See also: AverageUpslopeFlowpathLength, BreachDepressions. Parameters Flag Description -i, --dem Input raster DEM file -o, --output Output raster file 3.2 Flow Analysis, Drainage Network Extraction and Characterization d8 d8ca d8drainage d8drainagev segments minibasins outletbasin mainriver shreve strahler ottorivers mouths orderedmouths ottorivers 3.2.1 d8 3.2.2 d8ca 3.2.3 d8drainage 3.2.4 d8drainagev 3.2.5 segments 3.2.6 minibasins 3.2.7 outletbasin 3.2.8 mainriver 3.2.9 shreve 3.2.10 strahler 3.2.11 ottorivers 3.2.12 mouths 3.2.13 orderedmouths 3.2.14 ottorivers 3.3 Basin and Sub-basin Delineation minibasins outletbasin ottobasins 3.3.1 minibasins 3.3.2 outletbasin 3.3.3 ottobasins 3.4 Geomorphometric analysis tpi hand sand d8slope 3.4.1 tpi 3.4.2 hand 3.4.3 sand 3.4.4 d8slope 3.5 Applied Hydrology &amp; Risk Management gfplain flowpath damcourse damsections dambreak 3.5.1 gfplain 3.5.2 flowpath 3.5.3 damcourse 3.5.4 damsections 3.5.5 dambreak "],["parts.html", "4 Parts", " 4 Parts You can add parts to organize one or more book chapters together. Parts can be inserted at the top of an .Rmd file, before the first-level chapter heading in that same file. Add a numbered part: # (PART) Act one {-} (followed by # A chapter) Add an unnumbered part: # (PART\\*) Act one {-} (followed by # A chapter) Add an appendix as a special kind of un-numbered part: # (APPENDIX) Other stuff {-} (followed by # A chapter). Chapters in an appendix are prepended with letters instead of numbers. "],["footnotes-and-citations.html", "5 Footnotes and citations 5.1 Footnotes 5.2 Citations", " 5 Footnotes and citations 5.1 Footnotes Footnotes are put inside the square brackets after a caret ^[]. Like this one 1. 5.2 Citations Reference items in your bibliography file(s) using @key. For example, we are using the bookdown package (Xie 2025) (check out the last code chunk in index.Rmd to see how this citation key was added) in this sample book, which was built on top of R Markdown and knitr (Xie 2015) (this citation was added manually in an external file book.bib). Note that the .bib files need to be listed in the index.Rmd with the YAML bibliography key. The RStudio Visual Markdown Editor can also make it easier to insert citations: https://rstudio.github.io/visual-markdown-editing/#/citations References Xie, Yihui. 2015. Dynamic Documents with R and Knitr. 2nd ed. Boca Raton, Florida: Chapman; Hall/CRC. http://yihui.org/knitr/. ———. 2025. Bookdown: Authoring Books and Technical Documents with r Markdown. https://github.com/rstudio/bookdown. This is a footnote.↩︎ "],["blocks.html", "6 Blocks 6.1 Equations 6.2 Theorems and proofs 6.3 Callout blocks", " 6 Blocks 6.1 Equations AverageFlowpathSlope AverageUpslopeFlowpathLength 6.1.1 AverageFlowpathSlope Este tool calcula a declividade média (em graus) das rotas de escoamento que passam por cada célula de um DEM. O DEM deve estar preprocessado (ex.: BreachDepressions) para remover depressões e áreas planas. See also: AverageUpslopeFlowpathLength, carve. Parameters Flag Description -i, --dem Input raster DEM file -o, --output Output raster file Python function wbt.average_flowpath_slope( dem, output, callback=default_callback ) 6.1.2 AverageUpslopeFlowpathLength Identifies and modifies flat areas by decreasing the elevation values from the border to the center. Here is an equation. \\[\\begin{equation} f\\left(k\\right) = \\binom{n}{k} p^k\\left(1-p\\right)^{n-k} \\tag{6.1} \\end{equation}\\] You may refer to using \\@ref(eq:binom), like see Equation (6.1). 6.2 Theorems and proofs Labeled theorems can be referenced in text using \\@ref(thm:tri), for example, check out this smart theorem 6.1. Theorem 6.1 For a right triangle, if \\(c\\) denotes the length of the hypotenuse and \\(a\\) and \\(b\\) denote the lengths of the other two sides, we have \\[a^2 + b^2 = c^2\\] Read more here https://bookdown.org/yihui/bookdown/markdown-extensions-by-bookdown.html. 6.3 Callout blocks The R Markdown Cookbook provides more help on how to use custom blocks to design your own callouts: https://bookdown.org/yihui/rmarkdown-cookbook/custom-blocks.html "],["sharing-your-book.html", "7 Sharing your book 7.1 Publishing 7.2 404 pages 7.3 Metadata for sharing", " 7 Sharing your book 7.1 Publishing HTML books can be published online, see: https://bookdown.org/yihui/bookdown/publishing.html 7.2 404 pages By default, users will be directed to a 404 page if they try to access a webpage that cannot be found. If you’d like to customize your 404 page instead of using the default, you may add either a _404.Rmd or _404.md file to your project root and use code and/or Markdown syntax. 7.3 Metadata for sharing Bookdown HTML books will provide HTML metadata for social sharing on platforms like Twitter, Facebook, and LinkedIn, using information you provide in the index.Rmd YAML. To setup, set the url for your book and the path to your cover-image file. Your book’s title and description are also used. This gitbook uses the same social sharing data across all chapters in your book- all links shared will look the same. Specify your book’s source repository on GitHub using the edit key under the configuration options in the _output.yml file, which allows users to suggest an edit by linking to a chapter’s source file. Read more about the features of this output format here: https://pkgs.rstudio.com/bookdown/reference/gitbook.html Or use: ?bookdown::gitbook "],["references.html", "References", " References Xie, Yihui. 2015. Dynamic Documents with R and Knitr. 2nd ed. Boca Raton, Florida: Chapman; Hall/CRC. http://yihui.org/knitr/. ———. 2025. Bookdown: Authoring Books and Technical Documents with r Markdown. https://github.com/rstudio/bookdown. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
